version: "3.7"

services:
  rabbitmq:
    build:
      context: ./docker
      dockerfile: rabbitmq/rabbit.dockerfile
      args:
        rabbitmq_image: ${RABBITMQ_IMAGE}
    environment:
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    networks: [ internal ]
    ports: [ "${RABBITMQ_PORT}:5672", "${RABBITMQ_MANAGE_PORT}:15672" ]
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
  postgres:
    build:
      context: ./docker
      dockerfile: postgres/postgres.dockerfile
      args:
        postgres_image: ${POSTGRES_IMAGE}
    environment:
      POSTGRES_VERSION: ${POSTGRES_VERSION}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks: [ internal ]
    ports: [ "${POSTGRES_PORT}:5432" ]
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  internal:
